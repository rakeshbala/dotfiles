if [[ "$PROFILE_STARTUP" == true ]]; then
    # http://zsh.sourceforge.net/Doc/Release/Prompt-Expansion.html
    PS4=$'%D{%M%S%.} %N:%i> '
    exec 3>&2 2>$HOME/tmp/startlog.$$
    setopt xtrace prompt_subst
fi

export DOTFILEDIR="$(cat $HOME/.dotfilepath)"

export POWERLEVEL9K_MODE='nerdfont-complete'
export POWERLEVEL9K_LEFT_PROMPT_ELEMENTS=(user dir)
export POWERLEVEL9K_RIGHT_PROMPT_ELEMENTS=(vi_mode vcs time)
export POWERLEVEL9K_VI_INSERT_MODE_STRING=""
export POWERLEVEL9K_VI_COMMAND_MODE_STRING="N"


if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
  source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
fi

### Added by Zinit's installer
if [[ ! -f $HOME/.zinit/bin/zinit.zsh ]]; then
    print -P "%F{33}▓▒░ %F{220}Installing %F{33}DHARMA%F{220} Initiative Plugin Manager (%F{33}zdharma/zinit%F{220})…%f"
    command mkdir -p "$HOME/.zinit" && command chmod g-rwX "$HOME/.zinit"
    command git clone https://github.com/zdharma/zinit "$HOME/.zinit/bin" && \
        print -P "%F{33}▓▒░ %F{34}Installation successful.%f%b" || \
        print -P "%F{160}▓▒░ The clone has failed.%f%b"
fi

source "$HOME/.zinit/bin/zinit.zsh"
autoload -Uz _zinit
(( ${+_comps} )) && _comps[zinit]=_zinit

# Load a few important annexes, without Turbo
# (this is currently required for annexes)
zinit light-mode for \
    zinit-zsh/z-a-rust \
    zinit-zsh/z-a-as-monitor \
    zinit-zsh/z-a-patch-dl \
    zinit-zsh/z-a-bin-gem-node

### End of Zinit's installer chunk
#
#zinit for zsh
source $DOTFILEDIR/zsh/zinit.zsh

#slow commands - so asynced
source $DOTFILEDIR/zsh/deferred.zsh

# # Substring based history search
bindkey -M vicmd 'k' history-substring-search-up
bindkey -M vicmd 'j' history-substring-search-down

zstyle ':completion:*' accept-exact '*(N)'
zstyle ':completion:*' use-cache on
zstyle ':completion:*' cache-path ~/.zsh/cache


source "$DOTFILEDIR/functions/common.sh"

#aliases
source "$DOTFILEDIR/alias/common.alias"

#slow
#zsh-defer source "$HOME/.dotfile_local/zshrc.local" 2>/dev/null

# Colorize a bunch of stuff
# slow
#zsh-defer source "`brew --prefix`/etc/grc.bashrc"


#vi mode
set -o vi

# why would you type 'cd dir' if you could just type 'dir'?
 setopt AUTO_CD
#
 unsetopt CASE_GLOB

# # 10 second wait if you do something that will delete everything.  I wish I'd had this before...
 setopt RM_STAR_WAIT

#jobs that should go on even when the shell has exited, then you can set the option NO_HUP
 setopt NO_HUP
#
 export EDITOR="nvim"
#
# # Keep echo "station" > station from clobbering station
 setopt NO_CLOBBER
#
# # Case insensitive globbing
 setopt NO_CASE_GLOB
#
# # Be Reasonable!
 setopt NUMERIC_GLOB_SORT
#
# # I don't know why I never set this before.
 setopt EXTENDED_GLOB
#
# Bash like comments
 setopt interactivecomments
#
# # Who doesn't want home and end to work?
 bindkey '\e[1~' beginning-of-line
 bindkey '\e[4~' end-of-line

# bindkey "\eOP" run-help
#
# push curent line to buffer
 bindkey -M vicmd "q" push-line
#
# # it's like, space AND completion.  Gnarlbot.
 bindkey -M viins ' ' magic-space
 bindkey -M viins 'jj' vi-cmd-mode
#
# Compact completion
setopt listpacked

# Verify hist commands
setopt histverify

# Zsh Line editor - on by default
setopt ZLE

#history management
HISTFILE="$HOME/.zsh_history"
HISTSIZE=10000000
SAVEHIST=10000000
setopt BANG_HIST                 # Treat the '!' character specially during expansion.
setopt EXTENDED_HISTORY          # Write the history file in the ":start:elapsed;command" format.
setopt INC_APPEND_HISTORY        # Write to the history file immediately, not when the shell exits.
setopt SHARE_HISTORY             # Share history between all sessions.
setopt HIST_EXPIRE_DUPS_FIRST    # Expire duplicate entries first when trimming history.
setopt HIST_IGNORE_DUPS          # Don't record an entry that was just recorded again.
setopt HIST_IGNORE_ALL_DUPS      # Delete old recorded entry if new entry is a duplicate.
setopt HIST_FIND_NO_DUPS         # Do not display a line previously found.
setopt HIST_IGNORE_SPACE         # Don't record an entry starting with a space.
setopt HIST_SAVE_NO_DUPS         # Don't write duplicate entries in the history file.
setopt HIST_REDUCE_BLANKS        # Remove superfluous blanks before recording entry.
setopt HIST_VERIFY               # Don't execute immediately upon history expansion.
setopt HIST_BEEP                 # Beep when accessing nonexistent history.


if [[ "$PROFILE_STARTUP" == true ]]; then
    unsetopt xtrace
    exec 2>&3 3>&-
fi

export PATH="$HOME/.yarn/bin:$PATH"

#slow
#zsh-defer -c 'test -e "${HOME}/.iterm2_shell_integration.zsh" && source "${HOME}/.iterm2_shell_integration.zsh"'

# Add RVM to PATH for scripting. Make sure this is the last PATH variable change.
#export PATH="$PATH:$HOME/.rvm/bin"
